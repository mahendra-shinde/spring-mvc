========= Spring-WS 2.x Demo ==========================================================================
  Code snippets

--- XML Message: Holiday  ------------------------------
<Holiday xmlns="http://mahendra.com/hr/schemas">
    <StartDate>2006-07-03</StartDate>
    <EndDate>2006-07-07</EndDate>
</Holiday>
--------------------------------------------------------

--- XML Message: Employee  -----------------------------
<Employee xmlns="http://mahendra.com/hr/schemas">
    <Number>42</Number>
    <FirstName>Arjen</FirstName>
    <LastName>Poutsma</LastName>
</Employee>
--------------------------------------------------------

--- XML Message: HolidayRequest ------------------------
<HolidayRequest xmlns="http://mahendra.com/hr/schemas">
    <Holiday>
        <StartDate>2006-07-03</StartDate>
        <EndDate>2006-07-07</EndDate>
    </Holiday>
    <Employee>
        <Number>42</Number>
        <FirstName>Arjen</FirstName>
        <LastName>Poutsma</LastName>
    </Employee>
</HolidayRequest>
---------------------------------------------------------

--- DATA Contract -----------------------------------------------------
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:hr="http://mahendra.com/hr/schemas"
        elementFormDefault="qualified"
        targetNamespace="http://mahendra.com/hr/schemas">
    <xs:element name="HolidayRequest">
        <xs:complexType>
            <xs:all>
                <xs:element name="Holiday" type="hr:HolidayType"/>                                                    <xs:element name="Employee" type="hr:EmployeeType"/>
            </xs:all>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="HolidayType">
        <xs:sequence>
            <xs:element name="StartDate" type="xs:date"/>
            <xs:element name="EndDate" type="xs:date"/>                                                               </xs:sequence>                                                                                                 
    </xs:complexType>
    <xs:complexType name="EmployeeType">
        <xs:sequence>
            <xs:element name="Number" type="xs:integer"/>
            <xs:element name="FirstName" type="xs:string"/>
            <xs:element name="LastName" type="xs:string"/>                                                            </xs:sequence>                                                                                                 
    </xs:complexType>
</xs:schema>
----------------------------------------------------------------------------------------------

---- Service Contract : [Sample WSDL] --------------------------------------------------------

<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:schema="http://mahendra.com/hr/schemas"
                  xmlns:tns="http://mahendra.com/hr/definitions"
                  targetNamespace="http://mahendra.com/hr/definitions">
    <wsdl:types>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <xsd:import namespace="http://mahendra.com/hr/schemas" schemaLocation="hr.xsd"/>
        </xsd:schema>
    </wsdl:types>
 <wsdl:message name="HolidayRequest">
        <wsdl:part element="schema:HolidayRequest" name="HolidayRequest"/>
    </wsdl:message>
 <wsdl:portType name="HumanResource">
        <wsdl:operation name="Holiday">
            <wsdl:input message="tns:HolidayRequest" name="HolidayRequest"/>
        </wsdl:operation>
  </wsdl:portType>
<wsdl:binding name="HumanResourceBinding" type="tns:HumanResource"> 
 <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/> 
        <wsdl:operation name="Holiday">
            <soap:operation soapAction="http://mahendra.com/RequestHoliday"/>
          <wsdl:input name="HolidayRequest">
                <soap:body use="literal"/>   
	  </wsdl:input>
        </wsdl:operation>
 </wsdl:binding>
 <wsdl:service name="HumanResourceService">
        <wsdl:port binding="tns:HumanResourceBinding" name="HumanResourcePort">                                
         <soap:address location="http://localhost:8080/holidayService/">
  	</wsdl:port>
 </wsdl:service>
</wsdl:definitions>
-----------------------------------------------------------------------------------------

---- web.xml ----------------------------------------------------------------------------

    <!-- take especial notice of the name of this servlet -->
    <servlet>
        <servlet-name>spring-ws</servlet-name>
        <servlet-class>org.springframework.ws.transport.http.MessageDispatcherServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>spring-ws</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
-----------------------------------------------------------------------------------------
---- Maven Dependencies [POM.XML] -------------------------------------------------------
<dependencies>
    <dependency>
        <groupId>org.springframework.ws</groupId>
        <artifactId>spring-ws-core</artifactId>
        <version>2.2.0.RELEASE</version>
    </dependency>
    <dependency>
        <groupId>jdom</groupId>
        <artifactId>jdom</artifactId>
        <version>2.0.1</version>
    </dependency>
    <dependency>
        <groupId>jaxen</groupId>
        <artifactId>jaxen</artifactId>
        <version>1.1</version>
    </dependency>
   <dependency>
   	<groupId>wsdl4j</groupId>
   	<artifactId>wsdl4j</artifactId>
   	<version>1.6.1</version>
   </dependency>
</dependencies>
-----------------------------------------------------------------------------------------

---- spring-ws-servlet.xml --------------------------------------------------------------
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:sws="http://www.springframework.org/schema/web-services"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

  <context:component-scan base-package="com.mahendra.hr"/>

  <sws:annotation-driven/>

</beans>
-----------------------------------------------------------------------------------------

======= Implementing the EndPoint =======================================================

--- Handling XML Messages ---------------------------------------------------------------
package com.mahendra.hr.ws;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ws.server.endpoint.annotation.Endpoint;
import org.springframework.ws.server.endpoint.annotation.PayloadRoot;
import org.springframework.ws.server.endpoint.annotation.RequestPayload;

import com.mahendra.hr.service.HumanResourceService;
import org.jdom2.Element;
import org.jdom2.JDOMException;
import org.jdom2.Namespace;
import org.jdom2.filter.Filters;
import org.jdom2.xpath.XPathExpression;
import org.jdom2.xpath.XPathFactory;

@Endpoint
public class HolidayEndpoint {

    private static final String NAMESPACE_URI = "http://mahendra.com/hr/schemas";

    private XPathExpression<Element> startDateExpression;

    private XPathExpression<Element> endDateExpression;

    private XPathExpression<Element> firstNameExpression;

    private XPathExpression<Element> lastNameExpression;

    private HumanResourceService humanResourceService;

@Autowired
    public HolidayEndpoint(HumanResourceService humanResourceService) throws JDOMException {
        this.humanResourceService = humanResourceService;

        Namespace namespace = Namespace.getNamespace("hr", NAMESPACE_URI);
        XPathFactory xPathFactory = XPathFactory.instance();
        startDateExpression = xPathFactory.compile("//hr:StartDate", Filters.element(), null, namespace);
        endDateExpression = xPathFactory.compile("//hr:EndDate", Filters.element(), null, namespace);
        firstNameExpression = xPathFactory.compile("//hr:FirstName", Filters.element(), null, namespace);
        lastNameExpression = xPathFactory.compile("//hr:LastName", Filters.element(), null, namespace);
    }

@PayloadRoot(namespace = NAMESPACE_URI, localPart = "HolidayRequest")
public void handleHolidayRequest(@RequestPayload Element holidayRequest) throws Exception { 
Date startDate = parseDate(startDateExpression, holidayRequest);
        Date endDate = parseDate(endDateExpression, holidayRequest);
        String name = firstNameExpression.evaluateFirst(holidayRequest).getText() + " " + lastNameExpression.evaluateFirst(holidayRequest).getText();

        humanResourceService.bookHoliday(startDate, endDate, name);
    }
private Date parseDate(XPathExpression<Element> expression, Element element) throws ParseException {
        Element result = expression.evaluateFirst(element);
        if (result != null) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            return dateFormat.parse(result.getText());
        } else {
            throw new IllegalArgumentException("Could not evaluate [" + expression + "] on [" + element + "]");
        }
    }
}

--- Service Interface -------------------------------------------------------------------
package com.mahendra.hr.service;

import java.util.Date;

public interface HumanResourceService {
    void bookHoliday(Date startDate, Date endDate, String name);
}
-----------------------------------------------------------------------------------------

--- Service Implementation --------------------------------------------------------------
package com.mahendra.hr.service;

import java.util.Date;
import org.springframework.stereotype.Service;

@Service                                                                                                               public class StubHumanResourceService implements HumanResourceService {
    public void bookHoliday(Date startDate, Date endDate, String name) {
        System.out.println("Booking holiday for [" + startDate + "-" + endDate + "] for [" + name + "] ");
    }
}
-----------------------------------------------------------------------------------------

==== Publishing WSDL ====================================================================

--- spring-ws-servlet.xml ---------------------------------------------------------------
<sws:dynamic-wsdl id="holiday"
    portTypeName="HumanResource" 
    locationUri="/holidayService/"
    targetNamespace="http://mahendra.com/hr/definitions">
  <sws:xsd location="/WEB-INF/hr.xsd"/>
</sws:dynamic-wsdl>
-----------------------------------------------------------------------------------------

--- web.xml ---[ config param for WS-Servlet ]-------------------------------------------
<init-param>
  <param-name>transformWsdlLocations</param-name>
  <param-value>true</param-value>
</init-param>
-----------------------------------------------------------------------------------------
